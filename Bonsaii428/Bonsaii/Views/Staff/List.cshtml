@model IEnumerable<Bonsaii.Models.Staff>
@{
    ViewBag.Title = "员工档案管理";

}
<script src="~/Content/zTree/jquery.ztree.core-3.5.js"></script>
<link href="~/Content/zTree/metroStyle/metroStyle.css" rel="stylesheet" />
<script type="text/javascript">
		<!--
    var setting = {
            async: {
                enable: true,
                url: "/ZTree/CDSTree",
                autoParam: ["id", "name"],
            },
			data: {
				key: {
					title: "t"
				},
				simpleData: {
				    enable: true,
				    idKey: "id",
				pIdKey: "pId",
				rootPId: 0
				}
			},
			view: {
				fontCss: getFontCss
			}
		};



		function focusKey(e) {
			if (key.hasClass("empty")) {
				key.removeClass("empty");
			}
		}
		function blurKey(e) {
			if (key.get(0).value === "") {
				key.addClass("empty");
			}
		}
		var lastValue = "", nodeList = [], fontCss = {};
		function clickRadio(e) {
			lastValue = "";
			searchNode(e);
		}
		function searchNode(e) {
			var zTree = $.fn.zTree.getZTreeObj("treeDemo");
			if (!$("#getNodesByFilter").attr("checked")) {
				var value = $.trim(key.get(0).value);
				var keyType = "";
				if ($("#name").attr("checked")) {
					keyType = "name";
				} else if ($("#level").attr("checked")) {
					keyType = "level";
					value = parseInt(value);
				} else if ($("#id").attr("checked")) {
					keyType = "id";
					value = parseInt(value);
				}
				if (key.hasClass("empty")) {
					value = "";
				}
				if (lastValue === value) return;
				lastValue = value;
				if (value === "") return;
				updateNodes(false);

				if ($("#getNodeByParam").attr("checked")) {
					var node = zTree.getNodeByParam(keyType, value);
					if (node === null) {
						nodeList = [];
					} else {
						nodeList = [node];
					}
				} else if ($("#getNodesByParam").attr("checked")) {
					nodeList = zTree.getNodesByParam(keyType, value);
				} else if ($("#getNodesByParamFuzzy").attr("checked")) {
					nodeList = zTree.getNodesByParamFuzzy(keyType, value);
				}
			} else {
				updateNodes(false);
				nodeList = zTree.getNodesByFilter(filter);
			}
			updateNodes(true);

		}
		function updateNodes(highlight) {
			var zTree = $.fn.zTree.getZTreeObj("treeDemo");
			for( var i=0, l=nodeList.length; i<l; i++) {
				nodeList[i].highlight = highlight;
				zTree.updateNode(nodeList[i]);
			}
		}
		function getFontCss(treeId, treeNode) {
			return (!!treeNode.highlight) ? {color:"#A60000", "font-weight":"bold"} : {color:"#333", "font-weight":"normal"};
		}
		function filter(node) {
			return !node.isParent && node.isFirstNode;
		}
		function filter(treeId, parentNode, childNodes) {
		    if (!childNodes) return null;
		    for (var i = 0, l = childNodes.length; i < l; i++) {
		        childNodes[i].name = childNodes[i].name.replace(/\.n/g, '.');
		    }
		    return childNodes;
		}
		var key;
		$(document).ready(function () {
		    $.ajax({
		        url: "/ZTree/CDSTree",
		        type: "post",
		        data: { id: 0 },
		        success: function (data) {

		            $.fn.zTree.init($("#treeDemo"), setting, data);
		            key = $("#key"); //alert(key);
		            key.bind("focus", focusKey)
                    .bind("blur", blurKey)
                    .bind("propertychange", searchNode)
                    .bind("input", searchNode);
		            $("#name").bind("change", clickRadio);
		            $("#level").bind("change", clickRadio);
		            $("#id").bind("change", clickRadio);
		            $("#getNodeByParam").bind("change", clickRadio);
		            $("#getNodesByParam").bind("change", clickRadio);
		            $("#getNodesByParamFuzzy").bind("change", clickRadio);
		            $("#getNodesByFilter").bind("change", clickRadio);
		        }
		    });

		});
		//-->
</script>
<script type="text/javascript">
    //var setting = {
    //    async: {
    //        enable: true,
    //        url: "/ZTree/CDSTree",
    //        autoParam: ["id", "name"],
    //    },
    //    data: {
    //        simpleData: {
    //            enable: true,
    //            idKey: "id",
    //            pIdKey: "pId",
    //            rootPId: 0
    //        }
    //    },
    //    view: {
    //        //showIcon: false,
    //        showLine: false
    //    }
    //};

    //function filter(treeId, parentNode, childNodes) {
    //    if (!childNodes) return null;
    //    for (var i = 0, l = childNodes.length; i < l; i++) {
    //        childNodes[i].name = childNodes[i].name.replace(/\.n/g, '.');
    //    }
    //    return childNodes;
    //}
    ////$(document).ready(function () { $.fn.zTree.init($("#tree"), setting); });

    //$(document).ready(function (e) {
    //    $.ajax({
    //        url: "/ZTree/CDSTree",
    //        type: "post",
    //        data: { id: 0 },
    //        success: function (data) {
    //            //alert(data);
    //            //   json = JSON.parse(data);
    //            var tree = $("#treeDemo");
    //            //alert(data);
    //            $.fn.zTree.init(tree, setting, data);
    //            var treeObj = $.fn.zTree.getZTreeObj("treeDemo");
    //            treeObj.expandAll(true);
    //        }
    //    });
    //});


</script>
<div class="content">
    <div class="control-bar card bor-b">
        <ul class="breadcrumb pull-left pv">
            <li><a href="Home/IndexMain"><i class="fa fa-home"></i>主页</a></li>
            <li><a href="#">人事管理</a></li>
            <li><a href="/Staff/Index">@ViewBag.Title</a></li>
        </ul>
        <div class="h-list pull-right pv">
            <a href="/Staff/Create"><i class="fa fa-plus"></i>新增</a>
            <a href="#"><i class="fa fa-refresh"></i>刷新</a>
            <a href="#"><i class="fa fa-print"></i>输出</a>
        </div>
    </div>
    <input type="radio" id="getNodesByParamFuzzy" name="funType" class="radio" checked />
    <input type="radio" id="name" name="keyType" class="radio first" checked />
    <div class="tree-row">
        <div class="card left-tree p">
            <h4 class="title">员工分布图</h4>
            <div class="input-group">
                <span class="input-group-btn">

                    <button class="btn btn-default" type="button">
                        <i class="fa fa-search no-margin"></i>
                    </button>

                </span>
                <input type="text" id="key" value="" class="form-control empty" placeholder="搜索">
            </div>
            <div class="tree-wrap">
                <div class="scroll-wrap">
                    <div class="  tree ">
                        <ul id="treeDemo" class="ztree"></ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card p right-table">
            <div class="main-table mt">
                <table class="table table-striped table-hover table-bordered display" id="example" cellspacing="0">

                    <thead>
                        <tr>
                            <th class="checkbox-wrap">
                                <input type="checkbox" id="t1"><label for="t1"></label>
                            </th>
                            <th class="sorting_disabled">
                                序号
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.BillTypeNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.BillTypeName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.BillNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StaffNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Gender)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DepartmentName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.WorkType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Position)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AuditStatusName)
                            </th>
                            <th>操作</th>
                        </tr>
                    </thead>

                    @{
                        int index = 0;
                    }
                    <tbody>
                        @foreach (var item in Model)
                        {
                            index = index + 1;
                            <tr>
                                <td class="checkbox-wrap"><input type="checkbox" id="item_@index"><label for="item_@index"></label></td>

                                <td>
                                    @index
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.BillTypeNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BillTypeName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BillNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StaffNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Gender)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DepartmentName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.WorkType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Position)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AuditStatusName)
                                </td>
                                <td>
                                    <a href="/Staff/Details/@item.Number" class="icon fa fa-search bgc-blue-500"></a>
                                    @*状态为已审核(审核通过),不可编辑;状态为在审核;也不可编辑*@
                                    @if ((item.AuditStatus == 3) || (item.AuditStatus == 1))
                                    {
                                        <a href="#" class="icon fa fa-edit bgc-grey-500" disabled="true" id="unEdit"></a>
                                    }
                                    else
                                    {
                                        <a href="/Staff/Edit/@item.Number" class="icon fa fa-edit bgc-blue-500"></a>
                                    }
                                    <a href="/Staff/Delete/@item.Number" class="icon fa fa-trash bgc-red-500"></a>

                                </td>
                            </tr>
                        }
                        @{
                            int num = Model.Count();

                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script src="lib/jquery/jquery.min.js"></script>
<script src="lib/bootstrap/bootstrap.min.js"></script>
<script src="lib/scroll-bar/jquery.slimscroll.min.js"></script>

<script src="js/app.js"></script>
<script>
    function reinitIframe() {
        var iframe = document.getElementById("content");
        try {
            var bHeight = iframe.contentWindow.document.body.scrollHeight;
            var dHeight = iframe.contentWindow.document.documentElement.scrollHeight;
            var height = Math.max(bHeight, dHeight);
            iframe.height = height;
        } catch (ex) { }
    }
    window.setInterval("reinitIframe()", 200);
    //function reinitIframe() {
    //    var iframe = document.getElementById("treeDemo");
    //    try {
    //        var bHeight = iframe.contentWindow.document.body.scrollHeight;
    //        var dHeight = iframe.contentWindow.document.documentElement.scrollHeight;
    //        var height = Math.max(bHeight, dHeight);
    //        iframe.height = height;
    //    } catch (ex) { }
    //}
    //window.setInterval("reinitIframe()", 200);
</script>
<script type="text/javascript">

    $("#refresh").click(function () {
        window.location.reload();
    });
    $("#cancel").click(function () {
        $("#text").html("");
    });

</script>