@model Bonsaii.Models.BillPropertyModels
@{
    ViewBag.Title = "新增单据";
}

@using (Html.BeginForm("Create", "BillPropertyModels", FormMethod.Post, new { @id = "longfor_form" }))
{
    @Html.AntiForgeryToken()
    <div class="control-bar card bor-b">
        <ul class="breadcrumb pull-left pv">
            <li><a href="/Home/IndexMain"><i class="fa fa-home"></i>主页</a></li>
            <li><a href="/BillPropertyModels/Index">设置单据性质</a></li>
            <li><a href="#">@ViewBag.Title</a></li>
        </ul>
        <div class="h-list pull-right pv">
            <a href="#"  id="longforSave"><i class="fa fa-save"></i>保存</a>
            <a href="#" id="back"><i class="fa fa-refresh"></i>刷新</a>
            <a href="/BillPropertyModels/Index" id="back"><i class="fa fa-backward"></i>返回</a>
        </div>
    </div>

    <div class="card panel-box">
        <h4 class="title">新建单据</h4>
        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.BillSort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.BillSort, (IEnumerable<SelectListItem>)ViewBag.BillSortList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BillSort, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.TypeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TypeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TypeFullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeFullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodeMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CodeMethod, (IEnumerable<SelectListItem>)ViewBag.List, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodeMethod, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsAutoAudit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="horizontal">
                        <div class="radio-wrap">
                            <input type="radio" id="IsAutoAudit1" name="IsAutoAudit" class="with-gap" value="1" checked="checked" />
                            <label for="IsAutoAudit1">自动审核</label>
                        </div>
                        <div class="radio-wrap">
                            <input type="radio" id="IsAutoAudit2" name="IsAutoAudit" class="with-gap" value="2" />
                            <label for="IsAutoAudit2">手动审核</label>
                        </div>
                        <div class="radio-wrap">
                            <input type="radio" id="IsAutoAudit3" name="IsAutoAudit" class="with-gap" value="3" />
                            <label for="IsAutoAudit3">走审批流</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsLimitInput, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox-wrap">
                        <input type="checkbox" id="IsLimitInput" class="filld-in" name="IsLimitInput" />
                        <label for="IsLimitInput"></label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsAscOrDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox-wrap">
                        <input type="checkbox" id="IsAscOrDesc" class="filld-in" name="IsAscOrDesc" />
                        <label for="IsAscOrDesc"></label>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-primary" />
                    <button type="button" class="btn btn-outline" onclick="bonsaii_back('/BillPropertyModels/Index');">取消</button>
                </div>
            </div>


        </div>
    </div>
}





<script>

    $(document).ready(function () {
        $('#Code').attr('readOnly', 'true');
        $('#Code').val("YYMMDD****");

        $('#CodeMethod').change(function () {
            $('#Code ~ span').text("");
            var method = $('#CodeMethod').val();
            var tmp;
            if (method == '日编+流水') {
                $('#Code').attr('readOnly', 'true');
                tmp = "YYMMDD****";
            }
            if (method == '月编+流水') {
                $('#Code').attr('readOnly', 'true');
                tmp = "YYMM******";
            }
            if (method == '流水') {
                $('#Code').removeAttr('readOnly');
            }
            if (method == '手动设置') {
                $('#Code').attr('readOnly', 'true');
                tmp = "";
            }
            $('#Code').val(tmp);
            $('#Code').attr('value', tmp);

        });

        $('#Code').blur(function () {
            var method = $('#CodeMethod').val();
            var code = $('#Code').val();
            var reg = /^[a-zA-Z]{0,8}\**$/;
            var regLen = /([A-Za-z]|\*){10}/;
            if (regLen.test(code) && reg.test(code)) {
                return
            }
            else if (method == "流水") {
                $('#Code ~ span').text("流水编码格式输入错误");
            }
            else
                $('#Code ~ span').removeAttr('text');
        });

        $('#Type').blur(function () {
            var type = $('#Type').val();
            $.ajax({
                url: '/BillPropertyModels/CheckType',
                data: {
                    Type: type
                },
                type: 'POST',
                success: function (data) {
                    //柑橘类别已经存在
                    if (data.result == "ERROR") {
                        $('.form-group:first span:first').text("该单据类别已经存在！");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("验证码获取失败！请稍后重新尝试");
                },
                //    dataType: 'json'
            });
        });
    });
</script>


