@model BonsaiiModels.Backlog

@{
    ViewBag.Title = "编辑待办事项";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
<script src="~/Scripts/UI/lib/jquery/jquery.min.js"></script>
<script src="~/Scripts/longfor.js"></script>
<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
@*<script src="~/Scripts/bootstrap-select.js"></script>*@
<link href="~/Content/css/multi-select.css" media="screen" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery.multi-select.js" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content">
        <!-- 主内容开始 -->
        <div class="control-bar card bor-b">
            <ul class="breadcrumb pull-left pv">
                <li><a href="#"><i class="fa fa-home"></i>主页</a></li>
                <li><a href="#">员工技能管理</a></li>
                <li><a href="#">@ViewBag.Title</a></li>
            </ul>
            <div class="h-list pull-right pv">
                <a href="#" id="longforSave"><i class="fa fa-save"></i>保存</a>
                <a href="#" id="refresh"><i class="fa fa-refresh"></i>刷新</a>
                <a href="#" id="back"><i class="fa fa-backward"></i>返回</a>
            </div>
        </div>
    </div>
    
    <div class="card panel-box">
        <h4 class="title">@ViewBag.Title</h4>
        <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.AcciName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.AcciName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcciName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MessTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MessTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MessTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MessContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MessContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MessContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                <!--触发模态框-->
                <a href="javascript:void(0)" title="点击添加收件人" data-toggle="modal" data-target="#indentifier">
                @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:#2196F3;cursor:pointer" })
                </a>
                <div class="col-md-8" data-toggle="modal" data-target="#indentifier" href="javascript:void(0)">
                    @Html.TextAreaFor(model => model.Recipient, 4, 120, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
                </div>
            </div>
            <!--模态框-->
            <div class="modal fade" id="indentifier" tabindex="-1" role="dialog"
                aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"
                                aria-hidden="true">
                                ×
                            </button>
                            <h4 class="modal-title" id="myModalLabel">添加收件人
                            </h4>
                        </div>
                        <div class="modal-body">
                            <button id='select-all' class="btn btn-primary">选择全部</button>
                            <button id='deselect-all' class="btn btn-default">移除全部</button>
                            <p><span>所有联系人</span><span style="padding-left: 45%">收件人</span></p>

                            <select id='my-select' multiple='multiple'>
                               @{
                                   foreach(var temp in @ViewBag.Group) 
                                   {                       

                                       foreach(var s in @ViewBag.Count)
                                       {
                                          if(s.Key==temp.department)
                                              {
                                                 foreach (var temp1 in @ViewBag.Receiver)
                                                  {
                                                      if (temp.department == temp1.department)
                                                      {
                                                          var lab = @temp.name + "（"+s.Value+"）";
                                                        <optgroup label="@lab">
                                                            <option value="@temp1.value">@temp1.text</option>
                                                        </optgroup>
                                                      }
                                                  }

                                              }
                                       }
                                   }
}
                            </select>                                                  
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" id="modal_select_ok" data-dismiss="modal">
                                确定
                            </button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">
                                取消
                            </button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
            <script>
                $("#indentifier").modal(options);
                $('#indentifier').modal('show').css({
                    width: 'auto',
                    'margin-left': function () {
                        return -($(this).width() / 2);
                    }
                });
                //点击确定按钮，获取到选中的值，把它们放到input中

            </script>
       <!-- <div class="form-group">
            @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
            </div>
        </div>-->
       <!-- <div class="form-group">
            @Html.HiddenFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.TelNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.TelNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.EmailAddr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.EmailAddr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>-->

            <div class="form-group">
                @Html.LabelFor(model => model.SendMess, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox-wrap">
                        <input type="checkbox" id="SendMess" name="SendMess" value="true" checked=""><label for="SendMess"></label>
                        <label for="SendMess">
                            @Html.ValidationMessageFor(model => model.SendMess, "", new { @class = "text-danger" })
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox-wrap">
                        <input type="checkbox" id="Email" name="Email" value="true" checked=""><label for="Email"></label>
                        <label for="Email">
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </label>
                    </div>
                </div>
            </div>


            <div class="form-group" id="circulateMethod">
                @Html.LabelFor(model => model.Cycle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.Cycle, (IEnumerable<SelectListItem>)ViewBag.CirculateMethod, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Cycle, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group" id="onlyOneDate">
                @Html.LabelFor(model => model.OnlyOneDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="input-group date form_date_AB" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.OnlyOneDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><span class="fa fa-remove glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                        @Html.ValidationMessageFor(model => model.OnlyOneDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group" id="startDate" >
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="input-group date form_date_A" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><span class="fa fa-remove glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-group" id="remainDate" >
                @Html.LabelFor(model => model.RemindTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="input-group date form_date_B" data-date="" data-date-format="hh ii" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.RemindTime, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><span class="fa fa-remove glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-clock-o"></span></span>
                        @Html.ValidationMessageFor(model => model.RemindTime, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group" id="endDate">
                @Html.LabelFor(model => model.QuitTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="input-group date form_date_A" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.QuitTime, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><span class="fa fa-remove glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                        @Html.ValidationMessageFor(model => model.QuitTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsUse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox-wrap">
                        <input type="checkbox" id="IsUse" name="IsUse" value="true" checked=""><label for="IsUse"></label>
                        <label for="IsUse">
                            @Html.ValidationMessageFor(model => model.IsUse, "", new { @class = "text-danger" })
                        </label>
                    </div>
                </div>
            </div>

        <div class="form-group">
           <div class="col-md-offset-2 col-md-3">
               <input type="submit" value="保存" class="btn btn-primary" />
               <button type="button" class="btn btn-outline" onclick="tz()">取消</button>
           </div>
       </div>
    </div>
  </div>
}
@section Scripts {
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.multi-select.js" type="text/javascript"></script>
}
<script>
    function tz() {
        window.location.href = "/Backlog/Index";
    }
    $("#back").click(function () {
        window.location.href = "/Backlog/Index"
    });
    $("#refresh").click(function () {
        window.location.reload();
    });
    $('#test').click(function () {
        var str = "";
        $("input[name='roles']:checkbox").each(function () {
            if ($(this).is(":checked"))
                str += $(this).val() + ",";
        })
        str = str.substring(0, str.length - 1);
        $('#SelectedRoles').attr('value', str);
    });
</script>
<script type="text/javascript">

    /*<选择收件人*/
    $('#my-select').multiSelect({ selectableOptgroup: true });
    $('#select-all').click(function () {
        $('#my-select').multiSelect('select_all');
        return false;
    });
    $('#deselect-all').click(function () {
        $('#my-select').multiSelect('deselect_all');
        return false;
    });
    $("#modal_select_ok").click(function () {
        //获得所有选中的值
        var selectedValues = [];
        $("#my-select :selected").each(function () {
            selectedValues.push($(this).val());
        });
        // alert(selectedValues);
        //把它们放到页面的文本框中
        $("#Recipient").val(selectedValues);
        ///注：以下方法只能获得第一个选中的值，不能获得所有选中的值
        //alert($("#my-select option:selected").attr("value"));
    });
    /*选择收件人>*/

    $("#cb2").change(
    function () {
        if ($('#cb2').is(":checked")) {
            $(":checkbox").prop('checked', true);
        }
        else
            $(":checkbox").removeAttr("checked");
    });
    $("#refresh").click(function () {
        window.location.reload();
    });
    function tz() {
        window.location.href = "/Backlog/Index";
    }


    // $("#Receiver").click(
    function backlogIndex() {
        window.location.href = "/Backlog/Index";
    }
    //   );
</script>
<!--时分秒-->
<script type="text/javascript">
    jQuery(document).ready(function ($) {
        $('.form_date_B').datetimepicker({
            language: 'zh-CN',
            format: 'hh:ii',
            weekStart: 0,
            todayBtn: 0,
            autoclose: 1,
            todayHighlight: 0,
            startView: 1,
            minView: 0,
            minuteStep: 5,
            forceParse: 0
        });
    });
</script>
<!--时分秒-->
<!--form_date_A年月日--form_date_AB年月日时分秒-->
<script type="text/javascript">
    function initDatatimepicker() {
        $('.form_date_A').datetimepicker({
            language: 'zh-CN',
            format: 'yyyy/mm/dd',
            weekStart: 0,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
        $('.form_date_AB').datetimepicker({
            language: 'zh-CN',
            format: 'yyyy-mm-dd hh:ii:ss',
            autoclose: true,
            todayBtn: true,
            startDate: "2015-02-14 10:00",
            minuteStep: 5,
        });
    }
    $(document).ready(function () {
        initDatatimepicker();
    })

</script>
<!--年月日-->

<script type="text/javascript">
    $(document).ready(function (e) {   
        if ($("#circulateMethod option:selected").attr("value") == 1) {
            document.getElementById('remainDate').style.display = 'block';
            document.getElementById('onlyOneDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'block';
            document.getElementById('endDate').style.display = 'block';
        }
        if ($("#circulateMethod option:selected").attr("value") == 0) {
            document.getElementById('remainDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'none';
            document.getElementById('endDate').style.display = 'none';
            document.getElementById('onlyOneDate').style.display = 'block';//只显示这一项
        }
    });

    $("#Cycle").change(function () {

        if ($("#circulateMethod option:selected").attr("value") == 0) {
            document.getElementById('remainDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'none';
            document.getElementById('endDate').style.display = 'none';
            document.getElementById('onlyOneDate').style.display = 'block';//只显示这一项
        }
        if ($("#circulateMethod option:selected").attr("value") == 1) {
            document.getElementById('remainDate').style.display = 'block';
            document.getElementById('onlyOneDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'block';
            document.getElementById('endDate').style.display = 'block';
        }
        if ($("#circulateMethod option:selected").attr("value") == 2) {
            document.getElementById('remainDate').style.display = 'block';
            document.getElementById('onlyOneDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'block';
            document.getElementById('endDate').style.display = 'block';
        }
        if ($("#circulateMethod option:selected").attr("value") == 3) {
            document.getElementById('remainDate').style.display = 'none';
            document.getElementById('onlyOneDate').style.display = 'none';
            document.getElementById('startDate').style.display = 'none';
            document.getElementById('endDate').style.display = 'none';

        }
    });
</script>