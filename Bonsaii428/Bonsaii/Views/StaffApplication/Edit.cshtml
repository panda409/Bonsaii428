@model Bonsaii.Models.StaffApplication

@{
    ViewBag.Title = "编辑离职申请";
}
<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script src="~/Scripts/bootstrap-select.js"></script>

@using (Html.BeginForm("Edit", "StaffApplication", FormMethod.Post, new { @id = "longfor_form" }))
{
    @Html.AntiForgeryToken()
    <div class="control-bar card bor-b">
        <ul class="breadcrumb pull-left pv">
            <li><a href="/Home/IndexMain"><i class="fa fa-home"></i>主页</a></li>
            <li><a href="/StaffApplication/Index">离职管理</a></li>
            <li><a href="#">@ViewBag.Title</a></li>
        </ul>
        <div class="h-list pull-right pv">
            <a href="#" id="longforSave"><i class="fa fa-save"></i>保存</a>
            <a href="#" id="back"><i class="fa fa-refresh"></i>刷新</a>
            <a href="/StaffApplication/Index" id="back"><i class="fa fa-backward"></i>返回</a>
        </div>
    </div>

    <div class="card panel-box">
        <h4 class="title">修改单据</h4>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.BillTypeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.BillTypeNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BillTypeNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BillTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.BillTypeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BillTypeName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BillNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BillNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.StaffNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    <div class="input-group date form_date col-md-5" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        <span class="input-group-addon"><span class="fa fa-remove  glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                    </div>@Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HopeLeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    <div class="input-group date form_date col-md-5" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.HopeLeaveDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><span class="fa fa-remove  glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                    </div>@Html.ValidationMessageFor(model => model.HopeLeaveDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LeaveType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.LeaveType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LeaveReason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextAreaFor(model => model.LeaveReason, 4, 120, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LeaveReason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
            @*遍历，显示那些自定义的字段，因为是Edit方法，所以要显示字段的初始值*@
            @foreach (var x in @ViewBag.fieldList)
            {
                <div class="form-group">
                    @Html.Label((string)x.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="form-control" id="@x.Description" value="@x.Value" name="@x.Description" />
                    </div>
                </div>
            }
            @if (@ViewBag.alertMessage == true)
            {
                <script>
                    alert("请先设置该单据的审批模板！");
                </script>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="保存" class="btn btn-primary" />
                    <button type="button" class="btn btn-outline" onclick="bonsaii_back('/StaffApplication/Index');">取消</button>
                </div>
            </div>


        </div>
    </div>
}
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript">
    function initDatatimepicker() {
        $('.form_date').datetimepicker({
            language: 'zh-CN',
            format: 'yyyy-mm-dd hh:ii:ss',
            autoclose: true,
            todayBtn: true,
            startDate: "2015-02-14 10:00",
            minuteStep: 5,
        });
    }
    $(document).ready(function () {
        initDatatimepicker();
    })
</script>
@*<script>
    $.ajax({
        url: '/StaffChange/StaffSearch',
        type: 'POST',
        success: function (data) {
            $('#StaffNumber').bootstrapSelect({
                data: data,
                downBorder: true,
                multiple: false,//多选
                onSelect: function (val, rec) {//得到选择的值
                    $.ajax({
                        url: "./StaffNumber",
                        type: 'POST',
                        data: { number: val },
                        success: (function (data) {
                         //   $("#Name").val(data[0].staffName);
                            $("#Department").val(data[0].DepartmentName);
                        }
                        )
                    })
                }
            })
        }
    });
</script>*@
<script>


  var leaveType = "离职类型";
      $.ajax({
                url: '/Staff/SimpleParamSearch',
                type: 'POST',
                data: { name: leaveType },
                success: function (data) {
                    $('#LeaveType').bootstrapSelect({
                        data: data,
                        downBorder: true,
                        multiple: false,//多选
                    });
                }
            });
 </script>