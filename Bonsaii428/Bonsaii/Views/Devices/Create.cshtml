@model BonsaiiModels.Devices

@{
    ViewBag.Title = "添加新设备";
}
<script src="~/Scripts/UI/lib/jquery/jquery.min.js"></script>
<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script src="~/Scripts/bootstrap-select.js"></script>
@using (Html.BeginForm("Create", "Devices", FormMethod.Post, new { @id = "longfor_form" }))
{
    @Html.AntiForgeryToken()
    <div class="control-bar card bor-b">
        <ul class="breadcrumb pull-left pv">
            <li><a href="/Home/IndexMain"><i class="fa fa-home"></i>主页</a></li>
            <li><a href="#">考勤管理</a></li>
            <li><a href="#">@ViewBag.Title</a></li>
        </ul>

        <div class="h-list pull-right pv">
            <a href="#" id="longforSave"><i class="fa fa-save"></i>保存</a>
            <a href="#" id="refresh"><i class="fa fa-refresh"></i>刷新</a>
            <a href="/Devices/Index" id="back"><i class="fa fa-backward"></i>返回</a>
        </div>
    </div>


    <div class="card panel-box">
        <h4 class="title">添加新设备</h4>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.DeviceType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DeviceType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeviceType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DeviceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DeviceID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeviceID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommKey, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.CommKey, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommKey, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.IP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Port, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })<br/>
                    <button type="button" id="testDeviceConn" class="btn btn-outline">测试连接</button>
                    @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                    
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-3">
                    <input type="submit" value="保存" class="btn btn-primary" />
                    <button class="btn btn-outline">取消</button>
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $("#testDeviceConn").click(testConn);
    });

    //测试设备的连接
    function testConn() {
        $.ajax({
            url: "/Devices/TestConnection",
            data: {
                DeviceType: $("#DeviceType").val(),
                DeviceId: $("#DeviceID").val(),
                CommKey: $("#CommKey").val(),
                IP: $("#IP").val(),
                Port: $("#Port").val(),
            },
            type: "POST",
            success: function (data) {
                alert(data.Msg);
            },
            error: function (data) {
                alert("测试连接请求发送失败！请重新尝试");
            }

        });
    }
</script>
<script>
    $("#refresh").click(function () {
        window.location.reload();
    });
</script>