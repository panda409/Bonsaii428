@model Bonsaii.Models.Works.Works

@{
    ViewBag.Title = "创建基础排班";
}
<script src="~/Scripts/UI/lib/jquery/jquery.min.js"></script>
<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script src="~/Scripts/bootstrap-select.js"></script>
@using (Html.BeginForm("Create", "Works", FormMethod.Post, new { @id = "longfor_form" }))
{
    @Html.AntiForgeryToken()
    <div class="control-bar card bor-b">
        <ul class="breadcrumb pull-left pv">
            <li><a href="/Home/IndexMain"><i class="fa fa-home"></i>主页</a></li>
            <li><a href="#">考勤管理</a></li>
            <li><a href="#">@ViewBag.Title</a></li>
        </ul>

        <div class="h-list pull-right pv">
            <a href="#" id="longforSave"><i class="fa fa-save"></i>保存</a>
            <a href="#" id="refresh"><i class="fa fa-refresh"></i>刷新</a>
            <a href="/Works/Index" id="back"><i class="fa fa-backward"></i>返回</a>
        </div>
    </div>
    <div class="card panel-box">
        <h4 class="title">创建基础排班</h4>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <input type="hidden" id="WorkId" name="WorkId" value=@ViewBag.Id />

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.IsAutoWork, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsAutoWork)
                        @Html.ValidationMessageFor(model => model.IsAutoWork, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.IsAutoWork, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="horizontal">
                    <div class="col-md-3">
                        <div class="checkbox-wrap">
                            <input type="checkbox" id="IsAutoWork" class="filld-in" name="IsAutoWork" />
                            <label for="IsAutoWork"></label>
                        </div>
                    </div>
                    </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AutoWorkHours, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.AutoWorkHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AutoWorkHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AutoWorkExtraToOvertime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="horizontal">
                    <div class="col-md-3">
                        <div class="checkbox-wrap">
                            <input type="checkbox" id="AutoWorkExtraToOvertime" class="filld-in" name="AutoWorkExtraToOvertime" />
                            <label for="AutoWorkExtraToOvertime"></label>
                        </div>
                    </div>
                    </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsOverDays, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="horizontal">
                    <div class="col-md-3">
                        <div class="checkbox-wrap">
                            <input type="checkbox" id="IsOverDays" class="filld-in" name="IsOverDays" />
                            <label for="IsOverDays"></label>
                        </div>
                    </div>
                    </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.TotalWorkHours, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TotalWorkHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalWorkHours, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.TotalOvertimeHours, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TotalOvertimeHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalOvertimeHours, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.LatePunishment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.LatePunishment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LatePunishment, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-3">
                    <input type="submit" value="保存" class="btn btn-primary" />
                    <button type="button" class="btn btn-outline" onclick="tz()">取消</button>
                </div>
            </div>
            </div>
        </div>
            }
            <script>
                $(document).ready(function () {
                    $("#AutoWorkHours").attr("readOnly", "readOnly");
                    $("#IsAutoWork").change(function () {
                        if ($("#IsAutoWork").is(":checked")) {
                            $("#AutoWorkHours").removeAttr("readOnly");
                        }
                        else {
                            $("#AutoWorkHours").attr("readOnly", "readOnly");
                        }
                    });

                });
            </script>
<script>
    $("#refresh").click(function () {
        window.location.reload();
    })
    function tz() {
        window.location.href = "/Works/Index";
    }
</script>